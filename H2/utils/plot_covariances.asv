function plot_covariances(err_cov_homo, err_cov_hete, target)
covMatrix = mean(err_cov_homo, 1);
covMatrix = squeeze(covMatrix);
covMatrix(covMatrix<1e-3) = 0.00;
covMatrix2 = mean(err_cov_hete, 1);
covMatrix2 = squeeze(covMatrix2);
covMatrix2(covMatrix2<1e-3) = 0.00;

% Determinar los límites globales de color (mínimo y máximo)
globalMin = min([covMatrix(:); covMatrix2(:)]);
globalMax = max([covMatrix(:); covMatrix2(:)]);

fig = figure;
tcl = tiledlayout(1, 2, 'Padding', 'loose', 'TileSpacing', 'loose'); % Añadir márgenes

% Primer heatmap
nexttile;
h1 = heatmap(covMatrix, 'CellLabelFormat', '%.3g', 'ColorbarVisible', 'off');
h1.ColorLimits = [globalMin globalMax];
title('Matriz de Covarianza (Homocedástica)');
xlabel('Variables');
ylabel('Variables');

% Segundo heatmap
nexttile;
h2 = heatmap(covMatrix2, 'CellLabelFormat', '%.3g', 'ColorbarVisible', 'off');
h2.ColorLimits = [globalMin globalMax];
%title('Matriz de Covarianza (Heterocedástica)', 'Interpreter', 'latex');
xlabel('Variables');
ylabel('Variables', 'Interpreter', 'latex');

% Crear una barra de color compartida
ax = axes('visible', 'off', 'Colormap', h1.Colormap, 'CLim', [globalMin globalMax]);
cb = colorbar(ax, 'Position', [0.92, 0.15, 0.02, 0.7]); % Ajustar posición de la barra de color
cb.Label.String = '$Valor$';
cb.Label.Interpreter = 'latex';

% Ajustar la figura para añadir márgenes blancos alrededor
fig.Units = 'centimeters';
fig.Position = [1, 1, 24, 12]; % Ajustar tamaño total del gráfico

% Exportar a PDF con márgenes blancos y fuente LaTeX
exportgraphics(fig, target, 'ContentType', 'vector');
end

